/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenSwap, TokenSwapInterface } from "../TokenSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "getUniswapV2PairAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c9b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063cdbfb0161461003b578063d5bcb9b51461006b575b600080fd5b6100556004803603810190610050919061081f565b610087565b60405161006291906109df565b60405180910390f35b6100856004803603810190610080919061085b565b610135565b005b600080735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f73ffffffffffffffffffffffffffffffffffffffff1663e6a4390585856040518363ffffffff1660e01b81526004016100d99291906109fa565b60206040518083038186803b1580156100f157600080fd5b505afa158015610105573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012991906107f6565b90508091505092915050565b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161017293929190610a23565b602060405180830381600087803b15801561018c57600080fd5b505af11580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c49190610913565b508473ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d856040518363ffffffff1660e01b8152600401610214929190610a5a565b602060405180830381600087803b15801561022e57600080fd5b505af1158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610913565b50606073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614806102f6575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b1561045c57600267ffffffffffffffff81111561033c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561036a5781602001602082028036833780820191505090505b50905085816000815181106103a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848160018151811061041d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610642565b600367ffffffffffffffff81111561049d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104cb5781602001602082028036833780820191505090505b5090508581600081518110610509577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610592577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508481600281518110610607577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b737a250d5630b4cf539739df2c5dacb4c659f2488d73ffffffffffffffffffffffffffffffffffffffff166338ed173985858486426040518663ffffffff1660e01b8152600401610697959493929190610a83565b600060405180830381600087803b1580156106b157600080fd5b505af11580156106c5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106ee91906108d2565b50505050505050565b600061070a61070584610b02565b610add565b9050808382526020820190508285602086028201111561072957600080fd5b60005b85811015610759578161073f88826107e1565b84526020840193506020830192505060018101905061072c565b5050509392505050565b60008135905061077281610c20565b92915050565b60008151905061078781610c20565b92915050565b600082601f83011261079e57600080fd5b81516107ae8482602086016106f7565b91505092915050565b6000815190506107c681610c37565b92915050565b6000813590506107db81610c4e565b92915050565b6000815190506107f081610c4e565b92915050565b60006020828403121561080857600080fd5b600061081684828501610778565b91505092915050565b6000806040838503121561083257600080fd5b600061084085828601610763565b925050602061085185828601610763565b9150509250929050565b600080600080600060a0868803121561087357600080fd5b600061088188828901610763565b955050602061089288828901610763565b94505060406108a3888289016107cc565b93505060606108b4888289016107cc565b92505060806108c588828901610763565b9150509295509295909350565b6000602082840312156108e457600080fd5b600082015167ffffffffffffffff8111156108fe57600080fd5b61090a8482850161078d565b91505092915050565b60006020828403121561092557600080fd5b6000610933848285016107b7565b91505092915050565b60006109488383610954565b60208301905092915050565b61095d81610b67565b82525050565b61096c81610b67565b82525050565b600061097d82610b3e565b6109878185610b56565b935061099283610b2e565b8060005b838110156109c35781516109aa888261093c565b97506109b583610b49565b925050600181019050610996565b5085935050505092915050565b6109d981610ba5565b82525050565b60006020820190506109f46000830184610963565b92915050565b6000604082019050610a0f6000830185610963565b610a1c6020830184610963565b9392505050565b6000606082019050610a386000830186610963565b610a456020830185610963565b610a5260408301846109d0565b949350505050565b6000604082019050610a6f6000830185610963565b610a7c60208301846109d0565b9392505050565b600060a082019050610a9860008301886109d0565b610aa560208301876109d0565b8181036040830152610ab78186610972565b9050610ac66060830185610963565b610ad360808301846109d0565b9695505050505050565b6000610ae7610af8565b9050610af38282610baf565b919050565b6000604051905090565b600067ffffffffffffffff821115610b1d57610b1c610be0565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610b7282610b85565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610bb882610c0f565b810181811067ffffffffffffffff82111715610bd757610bd6610be0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610c2981610b67565b8114610c3457600080fd5b50565b610c4081610b79565b8114610c4b57600080fd5b50565b610c5781610ba5565b8114610c6257600080fd5b5056fea2646970667358221220d43ec52f7a3ea097ff56830b89b13fe65f14e77d4e336ce64222214578c2f96664736f6c63430008030033";

export class TokenSwap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenSwap> {
    return super.deploy(overrides || {}) as Promise<TokenSwap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenSwap {
    return super.attach(address) as TokenSwap;
  }
  connect(signer: Signer): TokenSwap__factory {
    return super.connect(signer) as TokenSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSwapInterface {
    return new utils.Interface(_abi) as TokenSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSwap {
    return new Contract(address, _abi, signerOrProvider) as TokenSwap;
  }
}
